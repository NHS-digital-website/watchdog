# This is an abstract workflow for running Watchdog informally by the concrete workflows for UAT and Production.
# For details on calling workflows, there inputs etc. see: https://docs.github.com/en/actions/using-workflows/reusing-workflows
name: Test Runner Workflow

on:
  workflow_call:
    inputs:
      TARGET_NAME:
        required: true
        type: string
      TARGET_DOMAIN:
        required: true
        type: string
      TARGET_SLACK_CHANNEL:
        required: true
        type: string
      BASIC_AUTH:
        required: false
        type: boolean
      USER_AGENT:
        required: false
        type: string

jobs:
  test-runner:
    name: Test Runner
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 8

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Get Dependencies # To try to keep the logs for the next step clean.
        run: |
          mvn install -DskipTests -B -V -T 2C

      - name: Build Maven Command
        id: build_command
        uses: actions/github-script@v7
        env:
          BASIC_AUTH: ${{ contains(inputs.BASIC_AUTH, true) }}
        with:
          script: |
            let args = '';
            if (process.env.BASIC_AUTH === 'true') {
              args += ` "-DauthType=basic" "-Dusername=${{ secrets.BASIC_AUTH_USER }}" "-Dpassword=${{ secrets.BASIC_AUTH_PASSWORD }}"`;
            }
            if ("${{ inputs.USER_AGENT }}".length > 0) {
              args += ` "-DuserAgent=${{ inputs.USER_AGENT }}"`;
            }
            core.setOutput("mvn_command_args", args);

      - name: Run tests
        run: |
          mvn test "-Dgroups=${{ inputs.TARGET_NAME }},none()" "-Ddomain=${{ inputs.TARGET_DOMAIN }}" ${{ steps.build_command.outputs.mvn_command_args }}
          
      - name: Save Logs
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: logs
          path: |
            logs/*
          
      - name: Slack message (Test Failed)
        if: ${{ failure() }}
        uses: ./.github/actions/slack-message
        with:
          SLACK_API_TOKEN: ${{ secrets.SLACK_API_TOKEN }}
          SLACK_CHANNEL: ${{ inputs.TARGET_SLACK_CHANNEL }}
          TITLE: ":doggy: Watchdog Alert"
          MESSAGE: |
            :x: @channel One or more Watchdog tests have failed. Please check the GitHub Actions Workflow logs for more information.

      - name: Slack message (Test Passed)
        if:  ${{ success() }}
        uses: ./.github/actions/slack-message
        with:
          SLACK_API_TOKEN: ${{ secrets.SLACK_API_TOKEN }}
          SLACK_CHANNEL: ${{  inputs.TARGET_SLACK_CHANNEL }}
          TITLE: ":doggy: Watchdog Message"
          MESSAGE: |
            :green_tick: All Watchdog tests have passed successfully.
              


